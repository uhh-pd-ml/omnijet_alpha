# @package _global_

# to execute this experiment run:
# python train.py experiment=experiment_tokenization_transformer

defaults:
  - override /data: data_tokenization.yaml
  # - override /data: landscape.yaml
  # - override /data: iter_dataset_jetclass_classification_top_vs_qcd.yaml
  - override /model: model_vqvae_transformer.yaml
  - override /callbacks: tokenization_callbacks.yaml
  # - override /trainer: ddp.yaml  # leads to quite some problems sometimes (illegal memory access, etc.)
  - override /trainer: gpu.yaml

# all parameters below will be merged with parameters from default configurations set above
# this allows you to overwrite only specified parameters

# add here checkpoint to continue training
# ckpt_path: <path_to_checkpoint>

project_name: "tokenization"
# project_name: "tokenization_dev"  # for debugging
tags: ["vqvae_tokenization"]

run_note: ""

seed: 1603
load_weights_from: false

data:
  batch_size: 512 # NOTE: adapt the limit_train_batches accordingly
  dataset_kwargs_common:
    # n_jets_per_file: 1000
    n_files_at_once: 30
    # load_only_once: true
    pad_length: 128
    feature_dict:
      part_pt: {multiply_by: 1, subtract_by: 1.8, func: "np.log", inv_func: "np.exp"}
      # part_pt: {multiply_by: 0.05, subtract_by: 12}
      part_etarel: {multiply_by: 3, larger_than: -0.8, smaller_than: 0.8}
      part_phirel: {multiply_by: 3, larger_than: -0.8, smaller_than: 0.8}
      # part_eta: {}
      # part_phi: {}
      # part_d0val: {func: "np.tanh", inv_func: "np.arctanh"}
      # part_dzval: {func: "np.tanh", inv_func: "np.arctanh"}

trainer:
  max_epochs: 100
  gradient_clip_val: 5
  log_every_n_steps: 10
  limit_train_batches: 5850 # 1900 for batch size 512, 3800 for batch size 256
  limit_val_batches: 200 # --> using 200*512 = 102400 validation samples, around 10k per type
  # precision: "16-mixed"  # seems to lead to problems with the VQVAE - "None has not attribute ".T""
  # num_sanity_val_steps: 10

model:
  model_kwargs_loaded: null
  # --- optimizer configuration ---
  optimizer:
    _target_: torch.optim.AdamW
    _partial_: true
    lr: 1e-3
    weight_decay: 1e-2
  # --- learning rate scheduler ---
  scheduler:
    _target_: gabbro.schedulers.lr_scheduler.OneCycleCooldown
    _partial_: true
    warmup: 4 # epochs until max_lr is reached
    cooldown: 20 # epochs to decrease to initial_lr after max_lr is reached
    cooldown_final: 50 # epochs to decrease to final_lr after max_lr is reached
    max_lr: 1e-3
    initial_lr: 5e-4
    final_lr: 3e-4 # final_lr is used after the second cooldown

  # --- model architecture configuration ---
  model_type: VQVAENormFormer
  model_kwargs:
    input_dim: 3
    hidden_dim: 128
    latent_dim: 4
    num_blocks: 4
    num_heads: 8
    alpha: 10
    vq_kwargs:
      num_codes: 2048
      beta: 0.9
      kmeans_init: true
      norm: null
      cb_norm: null
      affine_lr: 2
      sync_nu: 1
      replace_freq: 10

task_name: "tokenization"

logger:
  wandb:
    project: ${project_name}
    tags: ${tags}
    # group: ${project_name}
    name: ${task_name}
  comet:
    experiment_name: null
    project_name: ${project_name}
